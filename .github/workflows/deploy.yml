name: Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  deploy-api:
    name: Deploy API to Render
    runs-on: ubuntu-latest
    timeout-minutes: 20
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Trigger Render deployment
        run: |
          curl -X POST "${{ secrets.RENDER_DEPLOY_HOOK_API }}" \
            -H "Content-Type: application/json"

      - name: Wait for deployment
        run: |
          echo "Waiting for Render deployment to complete..."
          sleep 60

      - name: Health check
        run: |
          for i in {1..10}; do
            if curl -f "${{ secrets.API_URL }}/health" > /dev/null 2>&1; then
              echo "API is healthy!"
              exit 0
            fi
            echo "Attempt $i: API not ready yet, waiting..."
            sleep 10
          done
          echo "API health check failed after 10 attempts"
          exit 1

  deploy-web:
    name: Deploy Frontend to Vercel
    runs-on: ubuntu-latest
    timeout-minutes: 15
    environment: production
    needs: deploy-api

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install Vercel CLI
        run: pnpm add -g vercel@latest

      - name: Pull Vercel environment
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: apps/web

      - name: Build project artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: apps/web
        env:
          VITE_API_URL: ${{ secrets.API_URL }}

      - name: Deploy to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: apps/web

  deploy-worker:
    name: Deploy Worker to Render
    runs-on: ubuntu-latest
    timeout-minutes: 20
    environment: production
    needs: deploy-api

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Trigger Render worker deployment
        run: |
          curl -X POST "${{ secrets.RENDER_DEPLOY_HOOK_WORKER }}" \
            -H "Content-Type: application/json"

      - name: Wait for deployment
        run: |
          echo "Waiting for Render worker deployment to complete..."
          sleep 60

  notify:
    name: Deployment Notification
    runs-on: ubuntu-latest
    needs: [deploy-api, deploy-web, deploy-worker]
    if: always()

    steps:
      - name: Check deployment status
        run: |
          if [ "${{ needs.deploy-api.result }}" = "success" ] && \
             [ "${{ needs.deploy-web.result }}" = "success" ] && \
             [ "${{ needs.deploy-worker.result }}" = "success" ]; then
            echo "✅ All deployments successful!"
            echo "API: ${{ secrets.API_URL }}"
            echo "Web: Production URL from Vercel"
          else
            echo "❌ Some deployments failed"
            exit 1
          fi
